--///////////////////////////////////////////////////////////////////////////////////////////
-- Handler code for the Gathermate2 import process
-- This is based on code taken from GathermateData.lua from Gathermate2_Data
-- Gathermate2_Data is written and maintained by kagaro, & Nevcairiel and can be found at
--  https://mods.curse.com/addons/wow/gathermate2
--///////////////////////////////////////////////////////////////////////////////////////////

if not IsAddOnLoaded("GatherMate2") then return end

local WoWGatheringNodes = LibStub("AceAddon-3.0"):GetAddon("WoWGatheringNodes")
local GatherMate = LibStub("AceAddon-3.0"):GetAddon("GatherMate2")

local L = LibStub("AceLocale-3.0"):GetLocale("GatherMate2",false)

-------------------------------------------------------------------------------
-- Localized Lua globals.
-------------------------------------------------------------------------------
local _G = getfenv(0)

-- Functions
local pairs = _G.pairs
local ipairs = _G.ipairs

WoWGatheringNodes.generatedVersion = GetAddOnMetadata("WoWGatheringNodes", "X-Gatherer-Plugin-DatabaseID")

local NodeID_to_GathermateID = {
	[181069] = 225,
	[252807] = 273900,
	[2040] = 206,
	[273905] = 273900,
	[2042] = 413,
	[2043] = 415,
	[2044] = 454,
	[2045] = 407,
	[2046] = 414,
	[2047] = 208,
	[207541] = 536,
	[269049] = 273900,
	[233117] = 474,
	[273910] = 273900,
	[241557] = 273900,
	[249997] = 273900,
	[207543] = 536,
	[123848] = 213,
	[241558] = 277336,
	[208311] = 157,
	[252812] = 277336,
	[269056] = 273900,
	[245524] = 277336,
	[269057] = 273900,
	[273917] = 273900,
	[103709] = 202,
	[257545] = 277336,
	[242328] = 273900,
	[281079] = 490,
	[269059] = 273900,
	[246804] = 619,
	[246037] = 277336,
	[269060] = 273900,
	[257546] = 277336,
	[237342] = 178,
	[269061] = 273900,
	[294125] = 486,
	[103710] = 203,
	[245527] = 277336,
	[284408] = 277336,
	[284409] = 277336,
	[241180] = 277336,
	[243354] = 181,
	[251666] = 277336,
	[284410] = 277336,
	[284411] = 277336,
	[245529] = 273900,
	[284412] = 277336,
	[284413] = 277336,
	[251668] = 277336,
	[284414] = 277336,
	[103712] = 203,
	[251669] = 277336,
	[284416] = 277336,
	[284417] = 277336,
	[245532] = 277336,
	[276234] = 487,
	[246811] = 618,
	[203078] = 607,
	[284419] = 277336,
	[216761] = 136,
	[245533] = 277336,
	[284420] = 277336,
	[246812] = 617,
	[276237] = 485,
	[278795] = 277336,
	[245534] = 273900,
	[276238] = 491,
	[276239] = 489,
	[245535] = 273900,
	[276240] = 488,
	[281867] = 490,
	[269080] = 273900,
	[216764] = 108,
	[246559] = 273900,
	[276242] = 486,
	[281869] = 489,
	[269082] = 273900,
	[73] = 277336,
	[281870] = 487,
	[246560] = 273900,
	[269083] = 273900,
	[209349] = 466,
	[281872] = 488,
	[246561] = 273900,
	[269085] = 273900,
	[212163] = 158,
	[209350] = 465,
	[74] = 277336,
	[190169] = 450,
	[246562] = 273900,
	[269087] = 273900,
	[19903] = 220,
	[209351] = 464,
	[190170] = 449,
	[269089] = 273900,
	[244901] = 277336,
	[269090] = 273900,
	[190171] = 448,
	[237357] = 250,
	[269091] = 273900,
	[244774] = 476,
	[244902] = 277336,
	[301] = 301,
	[209353] = 467,
	[246309] = 273900,
	[190172] = 447,
	[302] = 302,
	[244775] = 477,
	[244903] = 277336,
	[303] = 303,
	[209354] = 462,
	[190173] = 452,
	[304] = 304,
	[279325] = 277336,
	[244776] = 477,
	[244904] = 273900,
	[305] = 305,
	[209355] = 463,
	[190174] = 452,
	[306] = 306,
	[252833] = 277336,
	[244777] = 479,
	[212169] = 159,
	[307] = 307,
	[180712] = 110,
	[190175] = 452,
	[245545] = 273900,
	[252834] = 273900,
	[244778] = 481,
	[177388] = 212,
	[190176] = 453,
	[252835] = 273900,
	[212171] = 161,
	[195036] = 235,
	[242350] = 277336,
	[245547] = 273900,
	[252836] = 273900,
	[212172] = 162,
	[245548] = 277336,
	[252837] = 277336,
	[244909] = 273900,
	[265526] = 277336,
	[252838] = 277336,
	[240690] = 277336,
	[212174] = 164,
	[207187] = 606,
	[245550] = 277336,
	[252839] = 273900,
	[212175] = 168,
	[207188] = 605,
	[245551] = 273900,
	[252840] = 273900,
	[244912] = 273900,
	[207189] = 608,
	[252841] = 273900,
	[212177] = 167,
	[207190] = 609,
	[245553] = 277336,
	[252842] = 277336,
	[244786] = 478,
	[281903] = 277336,
	[241206] = 273900,
	[250541] = 277336,
	[245554] = 273900,
	[251820] = 277336,
	[281905] = 277336,
	[241207] = 273900,
	[281906] = 277336,
	[245555] = 273900,
	[252844] = 277336,
	[269887] = 483,
	[241208] = 277336,
	[244917] = 277336,
	[279352] = 277336,
	[181108] = 208,
	[239803] = 277336,
	[284469] = 273900,
	[181109] = 205,
	[254126] = 273900,
	[254127] = 273900,
	[241212] = 277336,
	[251954] = 273900,
	[254128] = 277336,
	[241213] = 273900,
	[252850] = 273900,
	[211163] = 611,
	[241726] = 253,
	[229067] = 175,
	[243773] = 277336,
	[279366] = 277336,
	[241216] = 277336,
	[229068] = 173,
	[279367] = 277336,
	[229069] = 172,
	[211423] = 156,
	[229070] = 174,
	[142143] = 422,
	[246206] = 273900,
	[242242] = 273900,
	[229071] = 176,
	[246147] = 273900,
	[279373] = 277336,
	[241147] = 273900,
	[207494] = 535,
	[207474] = 537,
	[250083] = 273900,
	[189979] = 229,
	[229072] = 169,
	[242664] = 277336,
	[252808] = 273900,
	[282723] = 277336,
	[281904] = 277336,
	[284418] = 277336,
	[176644] = 215,
	[287531] = 273900,
	[229073] = 171,
	[254028] = 273900,
	[181248] = 201,
	[252832] = 273900,
	[247999] = 478,
	[207542] = 536,
	[279378] = 277336,
	[291222] = 273900,
	[273919] = 273900,
	[251552] = 273900,
	[279379] = 277336,
	[211174] = 612,
	[248000] = 478,
	[2866] = 417,
	[244899] = 273900,
	[207479] = 537,
	[212914] = 536,
	[241146] = 277336,
	[252860] = 273900,
	[241151] = 273900,
	[248001] = 478,
	[241155] = 277336,
	[277336] = 277336,
	[245316] = 273900,
	[252830] = 273900,
	[207540] = 536,
	[241518] = 273900,
	[212913] = 540,
	[248002] = 478,
	[244691] = 273900,
	[244699] = 273900,
	[207466] = 537,
	[252829] = 273900,
	[244701] = 273900,
	[209330] = 248,
	[212912] = 534,
	[248003] = 478,
	[241562] = 273900,
	[252828] = 273900,
	[207467] = 535,
	[250106] = 273900,
	[204282] = 603,
	[257978] = 277336,
	[212911] = 539,
	[248004] = 478,
	[258690] = 273900,
	[252881] = 277336,
	[242250] = 273900,
	[246269] = 273900,
	[251713] = 273900,
	[202737] = 238,
	[209328] = 242,
	[248005] = 478,
	[212910] = 535,
	[254025] = 273900,
	[207469] = 534,
	[290770] = 277336,
	[251714] = 273900,
	[202738] = 236,
	[252882] = 277336,
	[73940] = 209,
	[252880] = 277336,
	[251782] = 273900,
	[207470] = 540,
	[290134] = 290135,
	[237406] = 470,
	[202739] = 239,
	[215409] = 462,
	[248007] = 478,
	[182952] = 119,
	[245528] = 277336,
	[207471] = 536,
	[291226] = 273900,
	[269092] = 273900,
	[202740] = 240,
	[252824] = 277336,
	[248008] = 478,
	[221538] = 241,
	[240635] = 277336,
	[282721] = 277336,
	[251851] = 273900,
	[245579] = 277336,
	[288604] = 277336,
	[241743] = 256,
	[248009] = 478,
	[221539] = 242,
	[241564] = 273900,
	[245324] = 254,
	[165658] = 217,
	[245580] = 273900,
	[202655] = 602,
	[269088] = 273900,
	[248010] = 478,
	[221540] = 248,
	[207532] = 536,
	[245325] = 257,
	[269086] = 273900,
	[251719] = 273900,
	[252821] = 277336,
	[271227] = 271227,
	[248011] = 478,
	[221541] = 247,
	[284421] = 277336,
	[207475] = 537,
	[269084] = 273900,
	[251720] = 273900,
	[206836] = 604,
	[252820] = 273900,
	[248012] = 478,
	[221542] = 466,
	[226521] = 615,
	[207476] = 537,
	[277870] = 273900,
	[244887] = 273900,
	[242642] = 273900,
	[252819] = 273900,
	[277871] = 273900,
	[221543] = 467,
	[180751] = 101,
	[207477] = 537,
	[269081] = 273900,
	[237400] = 469,
	[242643] = 273900,
	[254024] = 273900,
	[245538] = 273900,
	[221544] = 465,
	[202741] = 237,
	[207478] = 537,
	[277874] = 273900,
	[207734] = 155,
	[242644] = 277336,
	[232542] = 251,
	[277875] = 273900,
	[221545] = 462,
	[184845] = 132,
	[246353] = 273900,
	[269079] = 273900,
	[237402] = 472,
	[242645] = 273900,
	[232543] = 252,
	[269078] = 273900,
	[221546] = 464,
	[242660] = 273900,
	[207480] = 537,
	[277878] = 273900,
	[251725] = 277336,
	[242646] = 273900,
	[232544] = 249,
	[277879] = 273900,
	[221547] = 463,
	[269077] = 273900,
	[207481] = 537,
	[277880] = 273900,
	[237404] = 471,
	[242647] = 277336,
	[232545] = 250,
	[269076] = 273900,
	[221548] = 166,
	[269075] = 273900,
	[207482] = 537,
	[251792] = 273900,
	[251727] = 277336,
	[202751] = 460,
	[281868] = 490,
	[272768] = 259,
	[221549] = 163,
	[269074] = 273900,
	[207483] = 537,
	[269073] = 273900,
	[275071] = 273900,
	[202752] = 461,
	[103714] = 201,
	[269072] = 273900,
	[276236] = 490,
	[207487] = 535,
	[207484] = 535,
	[142140] = 418,
	[269071] = 273900,
	[251857] = 277336,
	[191303] = 451,
	[269070] = 273900,
	[275074] = 273900,
	[278399] = 189,
	[207485] = 535,
	[142141] = 420,
	[251730] = 277336,
	[240605] = 273900,
	[278793] = 277336,
	[252813] = 273900,
	[1610] = 219,
	[278401] = 193,
	[207486] = 535,
	[142142] = 421,
	[182959] = 114,
	[278402] = 195,
	[269069] = 273900,
	[1617] = 402,
	[1618] = 401,
	[1619] = 403,
	[1620] = 404,
	[1621] = 405,
	[1622] = 408,
	[293749] = 191,
	[1624] = 411,
	[272778] = 260,
	[215416] = 246,
	[293750] = 196,
	[1628] = 410,
	[142144] = 423,
	[181166] = 436,
	[244700] = 273900,
	[276616] = 262,
	[272780] = 261,
	[215417] = 248,
	[269068] = 273900,
	[276617] = 267,
	[142145] = 424,
	[182958] = 116,
	[181275] = 440,
	[276618] = 265,
	[272782] = 484,
	[269067] = 273900,
	[252806] = 273900,
	[276619] = 264,
	[246492] = 184,
	[269066] = 273900,
	[181276] = 441,
	[276620] = 269,
	[182957] = 112,
	[269065] = 273900,
	[185881] = 442,
	[276621] = 263,
	[246493] = 182,
	[255828] = 273900,
	[181277] = 434,
	[276622] = 268,
	[206085] = 452,
	[269064] = 273900,
	[189973] = 446,
	[276623] = 266,
	[291201] = 273900,
	[255829] = 273900,
	[181278] = 435,
	[268440] = 618,
	[182956] = 117,
	[269063] = 273900,
	[182953] = 118,
	[207493] = 535,
	[284415] = 277336,
	[251738] = 277336,
	[181279] = 438,
	[244519] = 277336,
	[291204] = 273900,
	[207491] = 535,
	[241152] = 277336,
	[245345] = 273900,
	[181249] = 202,
	[245601] = 273900,
	[181280] = 439,
	[252809] = 277336,
	[269058] = 273900,
	[234106] = 616,
	[324] = 214,
	[207495] = 535,
	[246556] = 273900,
	[245602] = 277336,
	[181281] = 437,
	[251724] = 277336,
	[193954] = 232,
	[244689] = 273900,
	[237396] = 473,
	[207496] = 539,
	[240612] = 273900,
	[245603] = 273900,
	[242662] = 273900,
	[241767] = 277336,
	[252810] = 273900,
	[273052] = 482,
	[189978] = 228,
	[207497] = 539,
	[291211] = 273900,
	[273053] = 483,
	[242663] = 273900,
	[268450] = 619,
	[250080] = 273900,
	[246555] = 273900,
	[203278] = 233,
	[268451] = 617,
	[291213] = 273900,
	[245543] = 277336,
	[241641] = 480,
	[2041] = 412,
	[250081] = 273900,
	[207514] = 534,
	[189980] = 231,
	[268453] = 618,
	[251780] = 273900,
	[235376] = 474,
	[240619] = 273900,
	[209312] = 245,
	[228563] = 251,
	[241154] = 273900,
	[189981] = 232,
	[207500] = 539,
	[291217] = 273900,
	[251745] = 277336,
	[242666] = 277336,
	[207513] = 534,
	[175404] = 215,
	[253280] = 255,
	[1731] = 201,
	[1732] = 202,
	[1733] = 204,
	[1734] = 205,
	[1735] = 203,
	[241772] = 277336,
	[250084] = 273900,
	[1623] = 409,
	[237359] = 251,
	[207502] = 539,
	[243334] = 475,
	[251747] = 277336,
	[248006] = 478,
	[241773] = 273900,
	[250085] = 273900,
	[244698] = 273900,
	[246249] = 273900,
	[182951] = 113,
	[291223] = 273900,
	[251748] = 277336,
	[242669] = 273900,
	[240519] = 273900,
	[291224] = 273900,
	[278403] = 194,
	[245996] = 273900,
	[207504] = 539,
	[291225] = 273900,
	[251749] = 277336,
	[242670] = 277336,
	[278694] = 277336,
	[250087] = 273900,
	[207510] = 534,
	[269043] = 273900,
	[207505] = 539,
	[291227] = 273900,
	[290135] = 290135,
	[181555] = 221,
	[268466] = 617,
	[250088] = 273900,
	[246488] = 183,
	[191133] = 230,
	[182954] = 115,
	[291229] = 273900,
	[251751] = 277336,
	[245542] = 277336,
	[250984] = 273900,
	[291230] = 273900,
	[218950] = 613,
	[207508] = 534,
	[243312] = 252,
	[244694] = 273900,
	[207507] = 539,
	[202776] = 154,
	[250985] = 277336,
	[250090] = 273900,
	[193953] = 231,
	[123309] = 211,
	[243313] = 251,
	[245525] = 273900,
	[251753] = 277336,
	[202777] = 153,
	[207506] = 539,
	[250091] = 273900,
	[180655] = 103,
	[181068] = 226,
	[207509] = 534,
	[246557] = 273900,
	[244692] = 273900,
	[202778] = 149,
	[250987] = 273900,
	[250092] = 277336,
	[241665] = 277336,
	[202748] = 458,
	[280751] = 273900,
	[244494] = 277336,
	[235387] = 473,
	[202779] = 151,
	[241280] = 277336,
	[241149] = 273900,
	[207503] = 539,
	[240631] = 277336,
	[207511] = 534,
	[243325] = 181,
	[235388] = 472,
	[202780] = 152,
	[203071] = 601,
	[237398] = 474,
	[180658] = 109,
	[241150] = 273900,
	[207512] = 534,
	[215414] = 245,
	[235389] = 471,
	[242678] = 277336,
	[207501] = 539,
	[294311] = 273900,
	[241153] = 273900,
	[181271] = 433,
	[241272] = 277336,
	[240643] = 277336,
	[235390] = 470,
	[278456] = 277336,
	[207499] = 539,
	[291244] = 273900,
	[241267] = 273900,
	[214547] = 156,
	[278713] = 277336,
	[237360] = 252,
	[235391] = 469,
	[240634] = 277336,
	[207498] = 539,
	[291246] = 273900,
	[291258] = 273900,
	[191019] = 443,
	[207515] = 534,
	[207489] = 535,
	[216452] = 277336,
	[278460] = 277336,
	[278716] = 277336,
	[250098] = 273900,
	[180662] = 133,
	[278461] = 277336,
	[207516] = 534,
	[273955] = 273900,
	[251761] = 273900,
	[278462] = 277336,
	[291228] = 273900,
	[181558] = 223,
	[240629] = 277336,
	[241148] = 273900,
	[207517] = 534,
	[234105] = 614,
	[251762] = 273900,
	[242683] = 277336,
	[250109] = 277336,
	[2653] = 218,
	[243315] = 250,
	[203298] = 201,
	[207518] = 534,
	[251854] = 273900,
	[207492] = 535,
	[254141] = 273900,
	[243314] = 249,
	[291254] = 273900,
	[255344] = 258,
	[192046] = 130,
	[207519] = 534,
	[291255] = 273900,
	[251764] = 273900,
	[278477] = 620,
	[251723] = 273900,
	[250102] = 277336,
	[240608] = 273900,
	[252404] = 478,
	[207520] = 540,
	[291257] = 273900,
	[240609] = 273900,
	[207490] = 535,
	[207472] = 537,
	[250103] = 273900,
	[209311] = 241,
	[192048] = 123,
	[207521] = 540,
	[268753] = 273900,
	[181270] = 432,
	[240641] = 277336,
	[228493] = 249,
	[250104] = 273900,
	[257393] = 277336,
	[192049] = 124,
	[207522] = 540,
	[246524] = 273900,
	[268772] = 273900,
	[240642] = 277336,
	[251853] = 273900,
	[240657] = 273900,
	[209313] = 247,
	[192050] = 126,
	[207523] = 540,
	[291263] = 273900,
	[251726] = 277336,
	[278476] = 621,
	[252876] = 273900,
	[291264] = 273900,
	[291259] = 273900,
	[192051] = 121,
	[207524] = 540,
	[291265] = 273900,
	[246489] = 187,
	[240644] = 273900,
	[245531] = 273900,
	[291266] = 273900,
	[208420] = 277336,
	[192052] = 128,
	[207525] = 540,
	[291267] = 273900,
	[246490] = 186,
	[251728] = 277336,
	[202736] = 233,
	[250108] = 273900,
	[240614] = 273900,
	[192053] = 122,
	[207526] = 540,
	[246491] = 185,
	[251665] = 277336,
	[240646] = 277336,
	[278149] = 203,
	[181568] = 223,
	[123310] = 207,
	[192054] = 129,
	[207527] = 540,
	[237295] = 177,
	[251772] = 273900,
	[246558] = 273900,
	[251732] = 277336,
	[181569] = 223,
	[251737] = 277336,
	[269278] = 482,
	[207528] = 540,
	[252883] = 277336,
	[207468] = 539,
	[236756] = 170,
	[228576] = 469,
	[181570] = 223,
	[176583] = 425,
	[273901] = 273900,
	[207529] = 540,
	[73941] = 210,
	[242665] = 273900,
	[240649] = 273900,
	[278459] = 277336,
	[242346] = 273900,
	[176584] = 426,
	[192057] = 131,
	[207530] = 540,
	[251856] = 273900,
	[243688] = 277336,
	[185877] = 227,
	[245541] = 273900,
	[210216] = 156,
	[242667] = 273900,
	[282722] = 277336,
	[207531] = 540,
	[202747] = 457,
	[251776] = 273900,
	[240651] = 273900,
	[251746] = 277336,
	[244905] = 273900,
	[176586] = 427,
	[192059] = 127,
	[233107] = 273900,
	[202749] = 456,
	[202750] = 459,
	[240652] = 277336,
	[273918] = 273900,
	[275070] = 273900,
	[176587] = 455,
	[240630] = 273900,
	[207533] = 536,
	[242675] = 273900,
	[237358] = 249,
	[240653] = 273900,
	[275076] = 273900,
	[244913] = 277336,
	[176588] = 429,
	[214510] = 468,
	[207534] = 536,
	[278404] = 192,
	[252802] = 273900,
	[240654] = 273900,
	[228564] = 252,
	[278405] = 188,
	[176589] = 431,
	[207488] = 535,
	[207535] = 536,
	[207724] = 156,
	[252803] = 273900,
	[228571] = 474,
	[250097] = 273900,
	[181557] = 224,
	[180682] = 107,
	[228572] = 473,
	[207536] = 536,
	[242446] = 273900,
	[228573] = 472,
	[228574] = 471,
	[228575] = 470,
	[273956] = 273900,
	[180683] = 105,
	[246205] = 273900,
	[207537] = 536,
	[273900] = 273900,
	[252805] = 277336,
	[241680] = 273900,
	[254027] = 273900,
	[242959] = 277336,
	[180684] = 106,
	[245581] = 273900,
	[207538] = 536,
	[273902] = 273900,
	[212909] = 537,
	[253957] = 277336,
	[228510] = 250,
	[273903] = 273900,
	[209329] = 246,
	[181556] = 222,
	[207539] = 536,
	[278406] = 190,
}

--- Parses node data into the format required by Gathermate to be imported
function WoWGatheringNodes:parseGathermateData()
	--local NodeID_to_GathermateID = GenerateGathermateIDs()
	local GM_Node_Ids = GatherMate.nodeIDs
	local id_to_skill = {}
	local WoWGatheringNodesData = WoWGatheringNodes.Data

	local ProcessedData = {
		["HerbDB"] = {},
		["MineDB"] = {},
		["FishDB"] = {},
		["TreasureDB"] = {},
		["ArchaeologyDB"] = {},
		["GasDB"] = {},
		["LoggingDB"] = {},
	}

	local GatherMateSkilltoDB = {
		["Fishing"] = "FishDB",
		["Mining"] = "MineDB",
		["Herb Gathering"] = "HerbDB",
		["Treasure"] = "TreasureDB",
		["Archaeology"] = "ArchaeologyDB",
		["Extract Gas"] = "GasDB",
		["Logging"] = "LoggingDB",
	}

	for skill, data in pairs(GM_Node_Ids) do
		for nodeName, gathermate_id in pairs(data) do
			id_to_skill[gathermate_id] = skill
		end

		for id, data in pairs(WoWGatheringNodes.CustomNodesList ) do
			local nodeID = data.NodeID
			local nodeName = data.Name
			id_to_skill[nodeID] = data.Type
			NodeID_to_GathermateID[nodeID] = nodeID
		end
	end

	for MapID, Data in pairs( WoWGatheringNodesData ) do
		for NodeID, Data in pairs( Data ) do
			--Only deal with data that Gathermate has id's for
			if NodeID_to_GathermateID[NodeID] then
			 	local NodeID = NodeID_to_GathermateID[NodeID]
			 	--Determines which sill Gathermate classifies the node
			 	if id_to_skill[NodeID] then
				 	local placement = GatherMateSkilltoDB[id_to_skill[NodeID]]
				 	--if not placement then print(type(NodeID))end
				 	--Converts the data into a Gathermate's format
					for _, Coords in ipairs( Data) do
						local x ,y = WoWGatheringNodes:DecodeLoc(Coords)
						local coords = floor( x * 100 + 0.5 ) *1000000 + floor( y * 100 + 0.5 ) *100
						ProcessedData[placement] = ProcessedData[placement] or {}
						ProcessedData[placement][MapID] = ProcessedData[placement][MapID] or {}
						ProcessedData[placement][MapID][coords] = NodeID
					end
				end
			end
		end
	end

	return ProcessedData
end


---Determines the db and settings to use when merging daga
--pram: dbs  database to use
--pram: syle  "Merge" will combine new data with current data,  any other value will overwrite
--pram:  zoneFilter  determines if only sdata from pecific zones are to be used
function WoWGatheringNodes:PerformMerge(dbs ,style, zoneFilter)
	local GatherMateData = WoWGatheringNodes:parseGathermateData()
	local filter = nil

	local bcZones = {
		[94] = true,
		[95] = true,
		[97] = true,
		[100] = true,
		[102] = true,
		[103] = true,
		[104] = true,
		[105] = true,
		[106] = true,
		[107] = true,
		[108] = true,
		[109] = true,
		[110] = true,
		[111] = true,
		[122] = true,
	}

	local wrathZones = {
		[114] = true,
		[115] = true,
		[116] = true,
		[117] = true,
		[118] = true,
		[119] = true,
		[120] = true,
		[121] = true,
		[123] = true,
		[125] = true,
		[126] = true,
		[127] = true,
		[170] = true,
	}

	local cataZones = {
		[174] = true,
		[175] = true,
		[176] = true,
		[177] = true,
		[178] = true,
		[194] = true,
		[198] = true,
		[203] = true,
		[204] = true,
		[205] = true,
		[207] = true,
		[208] = true,
		[209] = true,
		[217] = true,
		[218] = true,
		[241] = true,
		[244] = true,
		[245] = true,
		[276] = true,
	}

	local mistsZones = {
		[371] = true,
		[376] = true,
		[379] = true,
		[388] = true,
		[390] = true,
		[418] = true,
		[422] = true,
		[433] = true,
		[504] = true,
		[507] = true,
		[516] = true,
		[554] = true,
	}

	local wodZones = {
		[525] = true,
		[534] = true,
		[535] = true,
		[539] = true,
		[542] = true,
		[543] = true,
		[550] = true,
		[572] = true,
		[577] = true,
		[582] = true,
		[588] = true,
		[589] = true,
		[590] = true,
		[622] = true,
		[624] = true,
	}

	local legionZones = {
		[627] = true,
		[628] = true,
		[630] = true,
		[634] = true,
		[641] = true,
		[646] = true,
		[650] = true,
		[680] = true,
		[790] = true,
		[830] = true,
		[882] = true,
		[885] = true,
	}

	local bfaZones = {
		[862] = true,
		[863] = true,
		[864] = true,
		[895] = true,
		[896] = true,
		[942] = true,
		[1161] = true,
		[1165] = true,
	}

	if zoneFilter and type(zoneFilter) == "string" then
		if zoneFilter == "TBC" then
			filter = bcZones
		elseif zoneFilter == "WRATH" then
			filter = wrathZones
		elseif zoneFilter == "CATACLYSM" then
			filter = cataZones
		elseif zoneFilter == "MISTS" then
			filter = mistsZones
		elseif zoneFilter == "WOD" then
			filter = wodZones
		elseif zoneFilter == "LEGION" then
			filter = legionZones
		elseif zoneFilter == "BFA" then
			filter = bfaZones
		end
	end

	if dbs["Mines"]    then self:MergeData(style ~= "Merge",filter,"Mining",GatherMateData["MineDB"] ) end
	if dbs["Herbs"]    then self:MergeData(style ~= "Merge",filter, "Herb Gathering",GatherMateData["HerbDB"]) end
	if dbs["Fish"]     then self:MergeData(style ~= "Merge",filter, "Fishing", GatherMateData["FishDB"]) end
	if dbs["Treasure"] then self:MergeData(style ~= "Merge",filter, "Treasure", GatherMateData["TreasureDB"]) end
	if dbs["Archaeology"] then self:MergeData(style ~= "Merge",filter, "Archaeology", GatherMateData["ArchaeologyDB"]) end
	if dbs["Gases"] then self:MergeData(style ~= "Merge",filter, "Extract Gas", GatherMateData["GasDB"]) end
	if dbs["Logging"] then self:MergeData(style ~= "Merge",filter, "Logging", GatherMateData["LoggingDB"]) end

	--self:CleanupGathermateImportData()
	GatherMate:SendMessage("WoWGatheringNodesData2Import")
	self.db.profile.GathermateImport = WoWGatheringNodes.generatedVersion
end


---Determines the db and settings to use when merging daga
--pram:
--pram:
--pram:
function WoWGatheringNodes:MergeData(clear,zoneFilter,nodeType, DBName)
	if clear then GatherMate:ClearDB(nodeType) end
	for zoneID, node_table in pairs(DBName) do
		if zoneFilter and zoneFilter[zoneID] or not zoneFilter then
			for coord, nodeID in pairs(node_table) do
				GatherMate:InjectNode2(zoneID,coord,nodeType, nodeID)
			end
		end
	end
end


function WoWGatheringNodes:CleanupGathermateImportData()
	--GatherMateData = nil
end


--@do-not-package@ 
--Builds a list of nodeIDs with the matching CarboniteID's
function GenerateGathermateIDs()
--GatherMate.nodeIDs
WoWGatheringNodesConfig.gm2 = {}
local gm_ids = {}
local matchedId = {}
local missing = {}
	for type, data in pairs(GatherMate.nodeIDs) do
		for name,id in pairs(data) do
			gm_ids[name] = id
		end
	end

	for id, name in pairs(WoWGatheringNodes.NodeIdNames) do
	--if id == 276242 then print("AW") end
		if gm_ids[name] then 
			matchedId[id] = gm_ids[name]
		else 
		--print(name)
			--missing[id] = name
		end

	end

WoWGatheringNodesConfig.gm2 = matchedId
end

function MissingGathermateIDs()
--GatherMate.nodeIDs
WoWGatheringNodesConfig.gm2 = {}
local ids = {}
local matchedId = {}
local missing = {}
	for id, name in pairs(WoWGatheringNodes.NodeIdNames) do		
		ids[name] = id

	end

	for type, data in pairs(GatherMate.nodeIDs) do
		for name,id in pairs(data) do
			if not ids[name] then
				missing[id] = name
			end
		end
	end

WoWGatheringNodesConfig.gm2 = missing
end

function MissingGathermateIDs2()
--GatherMate.nodeIDs
WoWGatheringNodesConfig.gm2 = {}
local WoWGatheringNodesData = WoWGatheringNodes:GetData()
local gm_ids = {}
local dump = {}
local missing = {}
	for type, data in pairs(GatherMate.nodeIDs) do
		for name,id in pairs(data) do
			gm_ids[id] = name
		end
	end

	for map, data in pairs(WoWGatheringNodesData) do
		for id,_ in pairs(data) do
			if gm_ids[id]  and not missing[gm_ids[id]] then
				--tinsert(missing,gm_ids[id] )
				missing[gm_ids[id]] = id
			end

		end
	end
	for name, _ in pairs(missing) do
	tinsert(dump, name)
	end

WoWGatheringNodesConfig.gm2 = dump
end
 --@end-do-not-package@